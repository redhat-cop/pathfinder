---
swagger: 2.0
info:
  title: Pathfinder Application Assessment
  description: Pathfinder Assessment API
  contact:
    name: VFT Team, EMEA Architects, Red Hat
    url: http://www.redhat.com
    email: noconnor@redhat.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0
produces:
  - application/json
schemes:
  - http
  - https

paths:
  /customers/:
    get:
      description: Get Customers
      responses:
        200:
          description: Get List of customers
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerType'
    post:
      description: Create a Customer
      parameters:
      - name: body
        in: body
        schema:
          $ref: '#/definitions/CustomerType'
      responses:
        200:
          description: Customer Created
          schema:
            type: string
        400:
          description: Unable to create customer

  /customers/{custId}:
    get:
      description: Get Customer details
      responses:
        200:
          description: Customer Details
          schema:
            $ref: '#/definitions/CustomerType'
        404:
          description: Customer Not Found
    delete:
      responses:
        200:
          description: Customer deleted
        404:
          description: Customer Not deleted
    parameters:
    - name: custId
      in: path
      description: Customer Identifier
      required: true
      type: string


  /customers/{custId}/reviews:
    get:
      description: Get all reviews for each customer application. NOTE this an ugly hack to help with MVP UI. This needs to be eventually removed.
      responses:
        200:
          description: Customer Details
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewType'
        404:
          description: Customer Not Found
    parameters:
    - name: custId
      in: path
      description: Customer Identifier
      required: true
      type: string


  /customers/{custId}/applicationAssessmentSummary:
    get:
      description: Get all customer applications and review status
      responses:
        200:
          description: Customer Details
          schema:
            type: array
            items:
              $ref: '#/definitions/ApplicationSummaryType'
        404:
          description: Customer Not Found
    parameters:
    - name: custId
      in: path
      description: Customer Identifier
      required: true
      type: string

  /customers/{custId}/applicationAssessmentProgress:
    get:
      description: Get count of customer applications and number assessed and reviewed
      responses:
        200:
          description: Customer Details
          schema:
            $ref: '#/definitions/ApplicationAssessmentProgressType'
        404:
          description: Customer Not Found
    parameters:
    - name: custId
      in: path
      description: Customer Identifier
      required: true
      type: string

  /customers/{custId}/dependencyTree:
    get:
      description: Get list of applications dependencies
      responses:
        200:
          description: DepencencyTree
          schema:
            $ref: '#/definitions/DependenciesListType'
        404:
          description: Customer Not Found
    parameters:
    - name: custId
      in: path
      description: Customer Identifier
      required: true
      type: string



  /customers/{custId}/applications/{appId}:
    get:
      description: Get details of an Application for a customer
      responses:
        200:
          description: Application Details
          schema:
            $ref: '#/definitions/ApplicationType'
        404:
          description: Application Not Found
    delete:
      responses:
        200:
          description: Application deleted
        404:
          description: Application Not Found
    parameters:
    - name: custId
      in: path
      description: Customer Identifier
      required: true
      type: string
    - name: appId
      in: path
      description: Application Identifier
      required: true
      type: string



  /customers/{custId}/applications/:
    get:
      description: Get list of applications for a customer
      parameters:
      - name: custId
        in: path
        required: true
        type: string
      - in: query
        name: apptype
        type: string
        description: TARGETS,DEPENDENCIES,PROFILES
      responses:
        200:
          description: Applications List
          schema:
            type: array
            items:
              $ref: '#/definitions/ApplicationType'
    post:
      description: Create an Application for a customer
      parameters:
      - name: custId
        in: path
        description: Customer Identifier
        required: true
        type: string
      - name: body
        in: body
        description: Application Definition
        schema:
          $ref: '#/definitions/ApplicationType'
      responses:
        200:
          description: Application Created
          schema:
            type: string
        400:
          description: Unable to create application
    parameters:



  /customers/{custId}/applications/{appId}/assessments:
    get:
      description: Get assessment ids for an application for a customer
      responses:
        200:
          description: Application Assessments
          schema:
            type: array
            items:
              type: string
    post:
      description: Create Assessment for an application for a customer
      parameters:
      - name: body
        in: body
        description: Application Assessment
        schema:
          $ref: '#/definitions/AssessmentType'
      responses:
        200:
          description: Assessment Created
          schema:
            type: string
    parameters:
    - name: custId
      in: path
      required: true
      type: string
    - name: appId
      in: path
      required: true
      type: string


  /customers/{custId}/applications/{appId}/assessments/{assessId}:
    get:
      description: Get Application Assessment for an appliation for a customer
      responses:
        200:
          description: Assessment Details
          schema:
            $ref: '#/definitions/AssessmentType'
        400:
          description: Assessment Not Found
    delete:
      responses:
        200:
          description: Assessment deleted
        404:
          description: Assessment Not Found
    parameters:
    - name: custId
      in: path
      required: true
      type: string
    - name: appId
      in: path
      required: true
      type: string
    - name: assessId
      in: path
      required: true
      type: string


  /customers/{custId}/applications/{appId}/assessments/{assessId}/process:
    get:
      description: Process an assessment results for an application for a customer
      responses:
        200:
          description: Assessment Results
          schema:
            $ref: '#/definitions/AssessmentProcessType'
        400:
          description: Assessment Not Found
    parameters:
    - name: custId
      in: path
      required: true
      type: string
    - name: appId
      in: path
      required: true
      type: string
    - name: assessId
      in: path
      required: true
      type: string



  /customers/{custId}/applications/{appId}/review:
    post:
      description: Create Review of an application for a customer
      responses:
        200:
          description: Review Created
          schema:
            type: string
        400:
          description: Unable to create review
    parameters:
    - name: custId
      in: path
      required: true
      type: string
    - name: appId
      in: path
      required: true
      type: string
    - name: body
      required: false
      in: body
      description: Application Review
      schema:
        $ref: '#/definitions/ReviewType'

  /customers/{custId}/applications/{appId}/review/{reviewId}:
    get:
      description: Get an application review of an application for a customer
      responses:
        200:
          description: Application review
          schema:
              $ref: '#/definitions/ReviewType'
    delete:
      responses:
        200:
          description: Review deleted
        404:
          description: Review Not Found
    parameters:
    - name: custId
      in: path
      required: true
      type: string
    - name: appId
      in: path
      required: true
      type: string
    - name: reviewId
      in: path
      required: true
      type: string


definitions:
#  ApplicationSterotype:
#    type: object
#    properties:
#      stereotype:
#        type: string
#        enum:
#        - TARGETAPP
#        - DEPENDENCY
#        - PROFILE

#  ReviewDecisionType:
#    type: object
#    properties:
#      rank:
#        type: string
#        enum:
#        - REHOST
#        - REPLATFORM
#        - REFACTOR
#        - REPURCHASE
#        - RETIRE
#        - RETAIN
#
#  ReviewWorkEstimateType:
#    type: object
#    properties:
#      rank:
#        type: string
#        enum:
#        - SMALL
#        - MEDIUM
#        - LARGE
#        - XLarge
#        - XXLarge
#        - XXXLarge

  ReviewType:
    required:
    - AssessmentId
    - ReviewDecision
    - WorkEffort
    - ReviewNotes
    - ReviewTimestamp
    - BusinessPriority
    - WorkPriority
    properties:
      AssessmentId:
        type: string
      ReviewDecision:
        description: REHOST,REPLATFORM,REFACTOR,REPURCHASE,RETIRE,RETAIN
        type: string
        enum: [REHOST,REPLATFORM,REFACTOR,REPURCHASE,RETIRE,RETAIN]
      WorkEffort:
        description: SMALL,MEDIUM,LARGE,XLarge,XXLarge,XXXLarge
        type: string
        enum: [SMALL,MEDIUM,LARGE,XLarge,XXLarge,XXXLarge]
      ReviewNotes:
        type: string
      ReviewTimestamp:
        type: string
      BusinessPriority:
        type: string
      WorkPriority:
        type: string

  CustomerType:
    required:
    - CustomerName
    - CustomerDescription
    - CustomerAssessor
    - CustomerVertical
    properties:
      CustomerId:
        type: string
      CustomerName:
        type: string
      CustomerDescription:
        type: string
      CustomerAssessor:
        type: string
      CustomerVertical:
        type: string
      CustomerSize:
        type: string
      CustomerRTILink:
        type: string
      CustomerPercentageComplete:
        type: integer

  ApplicationType:
    required:
    - Description
    - Name
    properties:
      Id:
        description: Application Id
        type: string
      Name:
        description: Application Name
        type: string
      Description:
        description: Application Description
        type: string
      Review:
        description: ID of review, ignored on post
        type: string
      Stereotype:
        description: TARGETAPP, DEPENDENCY, PROFILE
        type: string
        enum: [TARGETAPP, DEPENDENCY, PROFILE]


  AssessmentResponse:
    description: map
    properties:
      default:
        $ref: '#/definitions/QuestionAnswer'
    additionalProperties:
      type: string

  QuestionAnswer:
    type: object
    required:
    - default
    properties:
      default:
        type: string
      additonalProperties:
        type: string

  AssessmentType:
    type: object
    required:
    - payload
    - deps
    properties:
      payload:
        $ref: '#/definitions/AssessmentResponse'
      datetime:
        type: string
      deps:
        type: array
        items:
          type: string

  AssessmentProcessType:
    required:
    - AssmentNotes
    - AssessResults
    - Dependencies
    - BusinessPriority
    properties:
      AssmentNotes:
         type: string
      BusinessPriority:
         type: string
      Dependencies:
         type: array
         items:
            type: string
      AssessResults:
         type: array
         items:
            $ref: '#/definitions/AssessmentProcessQuestionResultsType'

  AssessmentProcessQuestionResultsType:
    required:
    - QuestionTag
    - QuestionAnswerDescription
    - QuestionRank
    properties:
      QuestionTag:
        type: string
      QuestionAnswerDescription:
        type: string
      QuestionRank:
        description: UNKNOWN(0), RED(1), AMBER(2), GREEN(3)
        type: integer
        enum: [UNKNOWN, RED, AMBER, GREEN]

  ApplicationSummaryType:
    required:
    - Id
    - Name
    - Assessed
    - BusinessPriority
    - Decision
    - WorkEffort
    - ReviewDate
    - LatestAssessmentId
    properties:
      Id:
        type: string
      Name:
        description: Application Name
        type: string
      Assessed:
        description: Has the application been assessed
        type: boolean
      BusinessPriority:
        description: Business Priority of application
        type: integer
      Decision:
        description: Decision on Application
        type: string
      WorkEffort:
        description: Work effort estimate
        type: string
      ReviewDate:
        description: Review date
        type: string
      LatestAssessmentId:
        description: Associated assessment id
        type: string

  DepsPairType:
    required:
    - from
    - to
    properties:
      from:
        type: string
      to:
        type: string

  DependenciesListType:
    required:
    - DepsList
    properties:
      DepsList:
         type: array
         items:
            $ref: '#/definitions/DepsPairType' 

  ApplicationAssessmentProgressType:
    required:
    - Appcount
    - Assessed
    - Reviewed
    properties:
        Appcount:
          description: number of applications for the customer
          type: integer
        Assessed:
          description: number of applications assessed
          type: integer
        Reviewed:
          description: number of applications reviewed
          type: integer


